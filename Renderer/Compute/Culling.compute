// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel ZeroScores
#pragma kernel ScorePlane
#pragma kernel SetFOV
#pragma kernel BitonicSort
#pragma kernel BitonicSortInt
#pragma kernel InitKeys
#pragma kernel ZeroReduce
#pragma kernel Scan
#pragma kernel ScanReduce
#pragma kernel SetDrawBuffer

#define BIOTIC_GROUP_SIZE 256
#define SCAN_GROUPSIZE 32

#include "./MergeSort/BitonicMergeSort.hlsl"
#include "./Cull/Culling.hlsl"
#include "./Scan/Scan.hlsl"

// clear buffer
[numthreads(32,1,1)]
void ZeroScores (uint3 id : SV_DispatchThreadID)
{
    _ZeroScores(id);
}


// offset, planes
[numthreads(32,6,1)]
void ScorePlane (uint3 id : SV_DispatchThreadID)
{
    _ScorePlane(id);
}

// offset
[numthreads(32,1,1)]
void SetFOV (uint3 id : SV_DispatchThreadID)
{
    _SetFOV(id);
}

[numthreads(BIOTIC_GROUP_SIZE,1,1)]
void BitonicSort(uint3 id : SV_DispatchThreadID) {
    _BitonicSort(id);
}

[numthreads(BIOTIC_GROUP_SIZE,1,1)]
void BitonicSortInt(uint3 id : SV_DispatchThreadID) {
    _BitonicSortInt(id);
}

[numthreads(BIOTIC_GROUP_SIZE,1,1)]
void InitKeys(uint3 id : SV_DispatchThreadID) {
    _InitKeys(id);
}

[numthreads(SCAN_GROUPSIZE,1,1)]
void ZeroReduce (uint3 id: SV_DispatchThreadID){
    _ZeroReduce(id);
}

[numthreads(SCAN_GROUPSIZE,1,1)]
void Scan (uint3 id: SV_DispatchThreadID){
    _Scan(id);
}

[numthreads(SCAN_GROUPSIZE,1,1)]
void ScanReduce (uint3 id: SV_DispatchThreadID){
    _ReduceScan(id);
}

[numthreads(SCAN_GROUPSIZE,1,1)]
void SetDrawBuffer (uint3 id: SV_DispatchThreadID){
    _SetDrawBuffer(id);
}
